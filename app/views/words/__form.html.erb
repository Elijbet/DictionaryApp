<%= form_for @word do |form| %>

  <% if word.errors.any? %>
<!--     <div id="error_explanation">
      <h2><%#= pluralize(word.errors.count, "error") %> prohibited this word from being saved:</h2>

      <ul>
      <#% word.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <#% end %>
      </ul>
    </div> -->
    <% word.errors.full_messages.each do |error| %>
      <%= js add_gritter(error, title: "CodeUp Club Dictionary", sticky: false) %>
    <% end %>
  <% end %>


  <div class="form-group upper-margin">
    <%= form.text_field :word, id: :word_word, class: "form-control", placeholder: "Word" %>
  </div>

  <div class="form-group">
    <%= form.text_field :tag_list, value: @word.tag_list.to_s, class: "form-control", placeholder: "Tags (separated by commas)"  %>
  </div> 
  <!-- This form.fields_for section only appears if 
        the 1.times { @word.definitions.build } appears in the controller action.  
        or 
        In here instead of :definitions; form.fields_for(:definitions) is a method that only works when argument is present 
          - The argument that you're essentially passing in is @word.definitions.build 
          - behaves like an if statement: if the argument is passed in, the form renders, if not then not.
        -->
   <button type="button" id="ShiftButton" class="btn btn-secondary form-control" >I don't know the definition!</button>
   
    <%= form.fields_for :definitions do |definition| %>
      <div class="form-group">

        <button type="button" id="ShiftButton" class="btn btn-secondary form-control" >I don't know the definition!</button>
        <%= definition.text_field :definition, class: "form-control definition", placeholder: "Definition", id: "chartdiv"%>
      </div>
    <% end %>

  <div class="form-group">
    <%= form.submit class: "btn btn-secondary form-control" %>
  </div>

<% end %>
